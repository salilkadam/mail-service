name: Build and Push Docker Images

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: docker4zerocool
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/backend
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/frontend
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push backend image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        file: ./backend/Dockerfile
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/backend:${{ github.sha }}
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/backend:latest
          docker4zerocool/mail-service-backend:${{ github.sha }}
          docker4zerocool/mail-service-backend:latest
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64

    - name: Build and push frontend image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        file: ./frontend/Dockerfile
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/frontend:${{ github.sha }}
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/frontend:latest
          docker4zerocool/mail-service-frontend:${{ github.sha }}
          docker4zerocool/mail-service-frontend:latest
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64

    - name: Generate deployment artifacts
      if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
      run: |
        # Create deployment artifacts
        mkdir -p deployment-artifacts
        
        # Copy and update manifests
        cp -r k8s deployment-artifacts/
        
        # Update image tags in manifests to use Docker Hub
        sed -i "s|image: docker4zerocool/mail-service-backend:latest|image: docker4zerocool/mail-service-backend:${{ github.sha }}|g" deployment-artifacts/k8s/backend-deployment.yaml
        sed -i "s|image: docker4zerocool/mail-service-frontend:latest|image: docker4zerocool/mail-service-frontend:${{ github.sha }}|g" deployment-artifacts/k8s/frontend-deployment.yaml
        
        # Create environment-specific manifests
        if [ "${{ github.ref }}" = "refs/heads/main" ]; then
          ENV="production"
          NAMESPACE="mail-service-prod"
        else
          ENV="staging"
          NAMESPACE="mail-service-staging"
        fi
        
        # Update namespaces
        find deployment-artifacts/k8s -name "*.yaml" -exec sed -i "s|namespace: mail-service|namespace: $NAMESPACE|g" {} \;
        
        # Create deployment summary
        cat > deployment-artifacts/deployment-info.json << EOF
        {
          "environment": "$ENV",
          "namespace": "$NAMESPACE",
          "commit": "${{ github.sha }}",
          "branch": "${{ github.ref_name }}",
          "images": {
            "backend": "docker4zerocool/mail-service-backend:${{ github.sha }}",
            "frontend": "docker4zerocool/mail-service-frontend:${{ github.sha }}"
          },
          "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)"
        }
        EOF

    - name: Upload deployment artifacts
      if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
      uses: actions/upload-artifact@v3
      with:
        name: deployment-artifacts-${{ github.sha }}
        path: deployment-artifacts/
        retention-days: 30

    - name: Create deployment summary
      if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
      run: |
        echo "## ðŸš€ Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Environment:** ${{ github.ref == 'refs/heads/main' && 'Production' || 'Staging' }}" >> $GITHUB_STEP_SUMMARY
        echo "**Commit:** \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
        echo "**Branch:** \`${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ðŸ“¦ Built Images" >> $GITHUB_STEP_SUMMARY
        echo "- **Backend:** \`docker4zerocool/mail-service-backend:${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Frontend:** \`docker4zerocool/mail-service-frontend:${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ðŸ”§ Next Steps" >> $GITHUB_STEP_SUMMARY
        echo "1. Images are available on Docker Hub" >> $GITHUB_STEP_SUMMARY
        echo "2. Use \`docker pull docker4zerocool/mail-service-backend:${{ github.sha }}\` to pull images" >> $GITHUB_STEP_SUMMARY
        echo "3. Deploy locally using \`docker-compose up\` or Kubernetes manifests" >> $GITHUB_STEP_SUMMARY

